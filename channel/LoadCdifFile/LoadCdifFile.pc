/*****************************************************************
 *文 件 名: LoadHxnpFile.c
 *功	能: 加载渠道流水文件
******************************************************************/
#include "Ibp.h"
#include "pos_stlm.h"
#include "DbsApi.h"
#include "load.h"

#define FILE_NAME_LEN_MAX   512

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
#include "tbl_txn_succ.h"
#include "tbl_cup_succ.h"
EXEC SQL END DECLARE SECTION;


/************************************************************************************
	结构体定义
 ************************************************************************************/
typedef struct __RELIST
{
	char	m_szSysRefNo[13];
	char	m_szTxDate[9];
}stReList;

/************************************************************************************/
/*   声明  ： vPrintVersion(char *pszParm)											*/
/*   功能  ：																		*/
/*  返回值 ： 无																	*/
/************************************************************************************/
void	vPrintVersion(char *pszParm)
{
	if(!pszParm)	return ;
	if(strcmp(sUpper(pszParm), "-V"))   return ;

	fprintf(stdout, "%s\n", g_szVersion);

	exit(0);
}

/************************************************************************************/
/*   函数名：						装载渠道流水主函数								*/
/************************************************************************************/
/*   声明  ： int main(int argc  , char ** argv )									*/
/*   功能  ： 完成清算全流程														*/
/*   参数  ： argc (参数个数 -- 输入)												*/
/*  返回值 ： RC_SUCC	--	成功													*/
/*			  RC_FAIL	--	失败													*/
/************************************************************************************/
int main(int argc, char **argv)
{
	int		iRet;
	char	szCmd[100];
	EXEC SQL BEGIN DECLARE SECTION;
	char	szStlmDate[9], szCupsNo[5];
	EXEC SQL END DECLARE SECTION;

	memset(gsLogFile, 0, sizeof(gsLogFile));
	strcpy(gsLogFile, "LoadCdifFile.log");
	
	if(5 > argc)
	{
		HtLog(ERR_PARAM, MAIN_ERR, argc, argv[0]);
		return RC_FAIL;
	}

	memset(szStlmDate, 0, sizeof(szStlmDate));
	memset(szCupsNo, 0, sizeof(szCupsNo));
	memcpy(szStlmDate, argv[1], 8);
	strcpy(szCupsNo, "cdif");

	snprintf(szCmd, sizeof(szCmd), "sed 's/`//g' -i %s/cdif/%s", getenv("FILEDIR"), argv[4]);
	system(szCmd);

	iRet = lDbsConnect(DBS_BATCH);
	if(iRet)
	{
		HtLog(ERR_PARAM, "dbsconnect error:(%d)(%s)", iRet, sDbsError());
		return RC_FAIL;
	}
   
	/*删除当天加载数据*/
	EXEC SQL DELETE FROM TBL_CUP_SUCC WHERE STLM_DATE = :szStlmDate AND CUPS_NO = :szCupsNo;
	if(SQL_UD_ERR)
	{
		HtLog(ERR_PARAM, "删除渠道(%s)流水失败, err:(%d)(%s)", szCupsNo, SQLCODE, sDbsError());
		vDbsDisconnect();
		return RC_FAIL;
	}

	//	微信支付  支付账单类文件格式装载	
	if(!memcmp("*", argv[4], 1))	//  非FileScan调启，可能人工或者页面发起
	{
		HtLog(NML_PARAM, "参数*, 未指明文件名, 程序自动FTP获取文件");
		iRet = nGetCupsFile(szStlmDate);
	}
	else
	{
		HtLog(NML_PARAM, "指明装载文件名[%s]", argv[4]);
		iRet = nLoadCdifFile(szStlmDate, argv[4]);
	}
	if(iRet)
	{
		vDbsDisconnect(); 
		HtLog(ERR_PARAM, "装载cdif渠道对账文件失败, err:(%d)", iRet);
		return RC_FAIL;
	}
	vDbsDisconnect();		

	return RC_SUCC;
}	  

/************************************************************************************/
/*   声明  ： int nGetCupsFile														*/
/*   功能  ： 获取渠道文件															*/
/*   参数  ： pszStlmDate			--装载日期										*/
/*  返回值 ： RC_SUCC		--	成功												*/
/*			  RC_FAIL		--	失败												*/
/************************************************************************************/
int	nGetCupsFile(char *pszDate, char *pszOutFile)
{
	int		i = 0, iRet = 0;
	char	szCmd[512], szYDay[9], szFile[1024];

	memset(szYDay, 0, sizeof(szYDay));
	strcpy(szYDay, sGetChgDate(pszDate, -1));

	memset(szCmd, 0, sizeof(szCmd));
	snprintf(szCmd, sizeof(szCmd), "sh %s/sbin/cdif_down.sh %s", getenv("HOME"), szYDay);
	system(szCmd);
	HtLog(NML_PARAM, "system cmd [%s]", szCmd);

	memset(szFile, 0, sizeof(szFile));
	snprintf(szFile, sizeof(szFile), "cdif_%s", szYDay);
	sTrimAll(szFile);
	
 	iRet = nLoadCdifFile(pszDate, szFile);
	if(iRet)
	{
		HtLog(ERR_PARAM, "装载cdif渠道对账文件失败, err:(%d)", iRet);
		return RC_FAIL;
	}

	return RC_SUCC;
}

/************************************************************************************/
/*   声明  ： int nLoadCdifFile(char *pszStlmDate, char *pszFile)					*/
/*   功能  ： 从渠道给的文件中加载渠道流水表										*/
/*   参数  ： pszStlmDate			--装载日期										*/
/*		   :  pszFile				--渠道文件名									*/
/*  返回值 ： RC_SUCC		--	成功												*/
/*			  RC_FAIL		--	失败												*/
/************************************************************************************/
int nLoadCdifFile(char *pszDate, char *pszFile)
{
	int	 iRet = 0, lSeqNo = 0, lLine = 0, lVaild = 0;
	double	dRate; 
	char	szPath[512], szLine[RECORD_LEN_MAX + 1], szTemp[100], szRate[20];
	FILE	*fp = NULL;
	CMList	*pstRoot = NULL;
	stReList	stList;
	EXEC SQL BEGIN DECLARE SECTION;
	TCupSucc	stCups;
	EXEC SQL END DECLARE SECTION;
	dbMchtCupsInf stCupsInf;
	
	memset(&stList, 0, sizeof(stList));
	memset(szPath, 0, sizeof(szPath));
	snprintf(szPath, sizeof(szPath), "%s/cdif/%s", getenv("FILEDIR"), pszFile);
	sTrimAll(szPath);

	HtLog(NML_PARAM, "cdif对账文件:%s", szPath);
	iRet = access(szPath, R_OK);
	if(iRet)
	{
		HtLog(ERR_PARAM, "文件[%s]不存在，请查看!, strerr[%s]", szPath, strerror(errno));
		return RC_FAIL;
	}
 
	if(NULL == (fp = fopen(szPath, "r")))
	{
		HtLog(ERR_PARAM, "fopen %s error, :%s.", szPath, strerror(errno));
		return RC_FAIL;
	}
  
	/* get file record */
	memset(szLine, 0, sizeof(szLine));
	while(fgets(szLine, RECORD_LEN_MAX, fp))	
	{
		lLine ++;   
		if(strlen(szLine) == 0 || szLine[0] > '9' || szLine[0] < '0')
		{
			memset(szLine, 0, sizeof(szLine));
			continue;
		}

		memset(&stCups, 0, sizeof(stCups));

		strcpy(stCups.fill, sGetValueByIdx(szLine, ",", 6));	  //商户号
		sTrimAll(stCups.fill);

		strcpy(stCups.term_no, sGetValueByIdx(szLine, ",", 7));	  //终端号fd41
		sTrimAll(stCups.term_no);

		memcpy(stCups.cups_no, "cdif", 4);			   //银商或银行编号
	
		strcpy(stCups.res, sGetValueByIdx(szLine, ",", 12));		//交易类型
		sTrimAll(stCups.res);

		memcpy(stCups.stlm_date, pszDate, 8);			//对帐日期

		memset(szTemp, 0, sizeof(szTemp));					
		strcpy(szTemp, sGetValueByIdx(szLine, ",", 2)); //交易日期
		sTrimAll(szTemp);
		memcpy(stCups.tx_date, szTemp, 4);
		memcpy(stCups.tx_date + 4, szTemp + 5, 2);
		memcpy(stCups.tx_date + 6, szTemp + 8, 2);

		memset(szTemp, 0, sizeof(szTemp));					
		strcpy(szTemp, sGetValueByIdx(szLine, ",", 3)); //交易时间
		sTrimAll(szTemp);
		memcpy(stCups.tx_time, szTemp, 2);
		memcpy(stCups.tx_time + 2, szTemp + 3, 2);
		memcpy(stCups.tx_time + 4, szTemp + 6, 2);

		memset(szTemp, 0, sizeof(szTemp));
		strcpy(szTemp, sGetValueByIdx(szLine, ",", 13));					
		sTrimAll(szTemp);
		memcpy(stCups.ac_no, szTemp, sizeof(stCups.ac_no));//卡号

		memset(szTemp, 0, sizeof(szTemp));
		strcpy(szTemp, sGetValueByIdx(szLine, ",", 16));					
		sTrimAll(szTemp);
		sTrimCRLF(szTemp);
		snprintf(stCups.trace_no, sizeof(stCups.trace_no), "%06s", szTemp);			//系统流水号fd11

		memset(szTemp, 0, sizeof(szTemp));
		strcpy(szTemp, sGetValueByIdx(szLine, ",", 1));				
		sTrimAll(szTemp);
		memcpy(stCups.sys_ref_no, szTemp, sizeof(stCups.sys_ref_no));			//系统检索号

		//sprintf(stCups.id, "%s%s%012d", stCups.cups_no, stCups.tx_date, lVaild);	//唯一键值id
		sprintf(stCups.id, "%s%s%012d", stCups.cups_no, stCups.stlm_date, lVaild);

		if(0 == memcmp(stCups.res, "消费撤销", 8) || 0 == memcmp(stCups.res, "冲正", 4))
		{
			memset(szTemp, 0, sizeof(szTemp));
			strcpy(szTemp, sGetValueByIdx(szLine, ",", 17));				
			sTrimAll(szTemp);
			memset(&stList, 0, sizeof(stList));
			memcpy(stList.m_szSysRefNo, szTemp, sizeof(stList.m_szSysRefNo) - 1);
			HtLog(NML_PARAM, "m_szSysRefNo: %s", stList.m_szSysRefNo);
			memcpy(stList.m_szTxDate, pszDate, sizeof(stList.m_szTxDate) - 1);
			if(!(pstRoot = pInsertList(pstRoot, &stList, sizeof(stList))))
			{
				HtLog(ERR_PARAM, "插入撤销、冲正流水失败, err:[%s]", sGetError());
				vDestroyList(pstRoot);
				return RC_FAIL;
			}
			continue;	
		}
		else if(0 == memcmp(stCups.res, "消费", 4))
		{
			sprintf(stCups.cup_key, "%s%s%s%s", stCups.cups_no, stCups.tx_date, stCups.term_no, stCups.trace_no);
			memcpy(stCups.tx_code, "消费", 8);
			stCups.result_flag[0] = TRADE_TXN_INIT;
		}
		else
		{
			HtLog(NML_PARAM, "未知的交易类型:[%s]", stCups.res);
			continue;
		}

		memset(szTemp, 0, strlen(szTemp));
		strcpy(szTemp, sGetValueByIdx(szLine, ",", 4));				//交易金额
		sTrimAll(szTemp);
		stCups.tx_amt= atof(szTemp);
		
		memset(szTemp, 0, strlen(szTemp));
		strcpy(szTemp, sGetValueByIdx(szLine, ",", 14));				//手续费
		sTrimAll(szTemp);
		stCups.cup_fee = stCups.tx_amt - atof(szTemp);
		
		lVaild ++;
		memcpy(stCups.rec_crt_ts, sGetCurrentTime(), sizeof(stCups.rec_crt_ts) - 1);
		
		EXEC SQL INSERT INTO TBL_CUP_SUCC VALUES(:stCups);
		if(SQLCODE)
		{
			fclose(fp);
			vDestroyList(pstRoot);
			HtLog(ERR_PARAM, "新增渠道(%s)流水(%s)失败, err:(%d)(%s), Line(%d)", stCups.cups_no,
				stCups.id, SQLCODE, sDbsError(), lLine);
			lDbsRollback();
			return RC_FAIL;
		}
		if(lVaild % 1000 == 0)
			lDbsCommit();
	}
	lDbsCommit();
	fclose(fp);
	HtLog(NML_PARAM, "装载卡友渠道流水完成，装载日期(%s),本地装载有效条数(%d)", pszDate, lVaild);

	return   nAbolishTrade(pstRoot);
}

/************************************************************************************/
/*   声明  ： nAbolishTrade															*/
/*   功能  ： 对撤销类交易的处理													*/
/*   参数  ： pszStlmDate		  --装载日期										*/
/*  返回值 ： RC_SUCC	  --  成功													*/
/*		 	  RC_FAIL	  --  失败													*/
/************************************************************************************/
int  nAbolishTrade(CMList *pstRoot)
{
	int  iRet = 0, iCount = 0, i = 0;
	CMList		*pstNode = pstRoot;
	stReList	stList;
	EXEC SQL BEGIN DECLARE SECTION;
	char		szStlmDate[9], szCupsNo[5], szFlag[2];
	char		szSysRefNo[13] = { 0 } ;
	EXEC SQL END DECLARE SECTION;


	if(!pstRoot)	return RC_SUCC;

	memset(&stList, 0, sizeof(stList));
	memset(szFlag, 0, sizeof(szFlag));
	memset(szCupsNo, 0, sizeof(szCupsNo));
	memset(szStlmDate, 0, sizeof(szStlmDate));

	strcpy(szCupsNo, "cdif");
	szFlag[0] = TRADE_TXN_REVERSED;

	while(pstNode)
	{
		memset(&stList, 0, sizeof(stList));
		memcpy(&stList, pstNode->pstData, sizeof(stList));

		//	撤销操作
		memcpy(szStlmDate, stList.m_szTxDate, 8);		
		memcpy(szSysRefNo, stList.m_szSysRefNo, 12);	
		HtLog(ERR_PARAM, "序号(%d), 撤销/冲正流水(%s)", ++ iCount,
			szSysRefNo);

		EXEC SQL UPDATE TBL_CUP_SUCC SET
			RESULT_FLAG = :szFlag
		WHERE SYS_REF_NO = :szSysRefNo
			AND STLM_DATE = :szStlmDate AND CUPS_NO = :szCupsNo;
		if(SQLCODE)
		{
			HtLog(ERR_PARAM, "更新渠道(%s)流水失败, err:(%d)(%s)", szCupsNo,
				SQLCODE, sDbsError());
			vDestroyList(pstRoot);
			lDbsRollback();
			return RC_FAIL;
		}

		if(0 == iCount % 100)
			lDbsCommit();
		pstNode = pstNode->pstNext;
	}

	vDestroyList(pstRoot);
	lDbsCommit();

	return RC_SUCC;
}
/************************************************************************************
	code end
 ************************************************************************************/
